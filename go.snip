# shorthand variable declaration
snippet :
	${1} := ${2}

# variable initialization
snippet vr
	var ${1:t} ${0:string}

# variable declaration
snippet var
	var ${1} = ${3}

# variables declaration
snippet vars
	var (
		${1} ${2} = ${3}
	)

# constant
snippet co
    const ${1} = ${2}

# append
snippet ap
	append(${1:slice}, ${0:value})

# type struct
snippet tys
    type ${1} struct {
        ${0}
    }

# type interface
snippet tyi
    type ${1} interface {
        ${0}
    }

# if err
snippet iferr
    if err != nil {
        ${1}
    }

# func
snippet func
    func ${1}(${2}) ${3} {
        ${0}
    }

# method
snippet meth
    func (${1:receiver} ${2:type}) ${3:name}(${4}) ${5} {
        ${0}
    }

# map
snippet map
	map[${1:string}]${0:int}

# ok
snippet ok
	if !ok {
		${0}
	}

# test function
snippet tf
    func Test${1:Function}(t *testing.T) {
        ${0}
    }

# table driven test
snippet dtd
    func Test${1:Function}(t *testing.T) {
        cases := []struct {
            desc   string
            ${2}
        }{
            {
                desc: "${3}",
                ${4},
            },
        }
        for _, c := range cases {
            t.Run(c.desc, func(t *testing.T) {
                ${0}
            })
        }
    }

