set-option -g default-shell /bin/zsh

set-option -sa terminal-overrides ",xterm*:Tc"
# Mouse mode on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g mouse on

# toogle last window by hitting again C-f
bind-key C-b last-window

# if multiple clients are attached to the same window, maximize it to the
# bigger one
set-window-option -g aggressive-resize

# Start windows and pane numbering with index 1 instead of 0
set -g base-index 1
setw -g pane-base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# Show times longer than supposed
set -g display-panes-time 2000

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# Split horiziontal and vertical splits, instead of % and "
# Also open them in the same directory
bind-key v split-window -h -c '#{pane_current_path}'
bind-key s split-window -v -c '#{pane_current_path}'

# Pressing Ctrl+Shift+Left (will move the current window to the left. Similarly
# right. No need to use the modifier (C-b).
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Source file
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Make more Vimmy
bind Escape copy-mode
bind Enter paste-buffer

# Select
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# Copy
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Cancel
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Paste
bind-key p paste-buffer -s ""
bind-key P choose-buffer "paste-buffer -b '%%' -s ''"

bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down

# copy text with mouse selection without pressing any key
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save -|pbcopy >/dev/null 2>&1"

# emacs key bindings in tmux command prompt (prefix + :) are better than
# vi keys, even for vim users
set -g status-keys emacs

# focus events enabled for terminals that support them
set -g focus-events on

# Sync panes (Send input to all panes in the window). When enabled, pane
# borders become red as an indication.
bind C-s if -F '#{pane_synchronized}' \
						 'setw synchronize-panes off; \
						 setw pane-active-border-style fg=colour63,bg=default; \
						 setw pane-border-format       " #P "' \
						 'setw synchronize-panes on; \
						 setw pane-active-border-style fg=red; \
						 setw pane-border-format       " #P - Pane Synchronization ON "'

# Faster command sequence
set -s escape-time 0

# Have a very large history
set -g history-limit 1000000

# Set title
set -g set-titles on
set -g set-titles-string "#T"

# Equally resize all panes
bind-key = select-layout even-horizontal
bind-key | select-layout even-vertical

# Resize panes
bind-key J resize-pane -D 10
bind-key K resize-pane -U 10
bind-key H resize-pane -L 10
bind-key L resize-pane -R 10

# Select panes
# NOTE(arslan): See to prevent cycling https://github.com/tmux/tmux/issues/1158
bind-key j select-pane -D
bind-key k select-pane -U
bind-key h select-pane -L
bind-key l select-pane -R

# Disable confirm before killing
bind-key x kill-pane

# Switch windows
unbind-key n
bind-key -n M-l next-window
bind-key -n M-Right next-window
bind-key -n M-h previous-window
bind-key -n M-Left previous-window
bind-key -n M-1 select-window -t:1
bind-key -n M-2 select-window -t:2
bind-key -n M-3 select-window -t:3
bind-key -n M-4 select-window -t:4
bind-key -n M-5 select-window -t:5
bind-key -n M-6 select-window -t:6
bind-key -n M-7 select-window -t:7
bind-key -n M-8 select-window -t:8
bind-key -n M-9 select-window -t:9
bind-key -n M-0 select-window -t:10

bind -n Pageup copy-mode -u
bind-key -n C-u if-shell "$is_vim" "send-keys C-u" "copy-mode -u"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

set-environment -g PATH "/usr/local/bin:/bin:/usr/bin"

set -g @tpm_plugins ' \
    tmux-plugins/tpm \
    tmux-plugins/tmux-pain-control \
    tmux-plugins/tmux-prefix-highlight \
    tmux-plugins/tmux-yank \
'

run -b '~/.config/tmux/plugins/tpm/tpm'


# Prefix highlight
set -g @prefix_highlight_prefix_prompt ' '
set -g @prefix_highlight_bg 'red'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_bg 'magenta'
set -g @prefix_highlight_prefix_prompt 'wait'
set -g @prefix_highlight_copy_prompt 'copy'
set -g @prefix_highlight_sync_prompt 'sync'

setw -g clock-mode-style 24

set -gq display-panes-colour brightblack
set -gq display-panes-active-colour brightwhite

# Status bar
set -gq status on
set -gq status-justify left
set -gq status-left-length 100
set -gq status-right-length 100

set -gq status-style fg=yellow,bg=white #yellow and base2

set -gq window-status-format "#[fg=white,bg=yellow] #I #[fg=yellow,bg=white] #W "
set -gq window-status-current-format "#[fg=white,bg=blue] #I #[fg=yellow,bg=white] #W "

set -gq status-left "#{prefix_highlight} "

set -gq status-right " #[fg=magenta] %d.%m.%Y #[fg=green] %H:%M  "

